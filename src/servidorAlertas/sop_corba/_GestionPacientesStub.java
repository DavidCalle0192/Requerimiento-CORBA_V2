package servidorAlertas.sop_corba;


/**
* servidorAlertas/sop_corba/_GestionPacientesStub.java .
* Generated by the IDL-to-Java compiler (portable), version "3.2"
* from gesPacientes.idl
* domingo 21 de junio de 2020 06:38:06 PM COT
*/

public class _GestionPacientesStub extends org.omg.CORBA.portable.ObjectImpl implements servidorAlertas.sop_corba.GestionPacientes
{

  public boolean registrarPaciente (servidorAlertas.dto.PacienteDTO objPaciente, cliente.sop_corba.Paciente refCliente, org.omg.CORBA.StringHolder resultado)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("registrarPaciente", true);
                servidorAlertas.dto.PacienteDTOHelper.write ($out, objPaciente);
                cliente.sop_corba.PacienteHelper.write ($out, refCliente);
                $in = _invoke ($out);
                boolean $result = $in.read_boolean ();
                resultado.value = $in.read_string ();
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return registrarPaciente (objPaciente, refCliente, resultado        );
            } finally {
                _releaseReply ($in);
            }
  } // registrarPaciente

  public boolean actualizarPaciente (servidorAlertas.dto.PacienteDTO objPaciente)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("actualizarPaciente", true);
                servidorAlertas.dto.PacienteDTOHelper.write ($out, objPaciente);
                $in = _invoke ($out);
                boolean $result = $in.read_boolean ();
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return actualizarPaciente (objPaciente        );
            } finally {
                _releaseReply ($in);
            }
  } // actualizarPaciente

  public servidorAlertas.dto.PacienteDTO buscarPaciente (int idPaciente)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("buscarPaciente", true);
                $out.write_long (idPaciente);
                $in = _invoke ($out);
                servidorAlertas.dto.PacienteDTO $result = servidorAlertas.dto.PacienteDTOHelper.read ($in);
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return buscarPaciente (idPaciente        );
            } finally {
                _releaseReply ($in);
            }
  } // buscarPaciente

  public boolean enviarIndicadores (int idPaciente, servidorAlertas.dto.IndicadoresDTO objIndicadores)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("enviarIndicadores", true);
                $out.write_long (idPaciente);
                servidorAlertas.dto.IndicadoresDTOHelper.write ($out, objIndicadores);
                $in = _invoke ($out);
                boolean $result = $in.read_boolean ();
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return enviarIndicadores (idPaciente, objIndicadores        );
            } finally {
                _releaseReply ($in);
            }
  } // enviarIndicadores

  public boolean establecerMaxPacientes (int num)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("establecerMaxPacientes", true);
                $out.write_long (num);
                $in = _invoke ($out);
                boolean $result = $in.read_boolean ();
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return establecerMaxPacientes (num        );
            } finally {
                _releaseReply ($in);
            }
  } // establecerMaxPacientes

  public int getMaxPacientes ()
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("getMaxPacientes", true);
                $in = _invoke ($out);
                int $result = $in.read_long ();
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return getMaxPacientes (        );
            } finally {
                _releaseReply ($in);
            }
  } // getMaxPacientes

  public int getNumRegistros ()
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("getNumRegistros", true);
                $in = _invoke ($out);
                int $result = $in.read_long ();
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return getNumRegistros (        );
            } finally {
                _releaseReply ($in);
            }
  } // getNumRegistros

  // Type-specific CORBA::Object operations
  private static String[] __ids = {
    "IDL:servidorAlertas/sop_corba/GestionPacientes:1.0"};

  public String[] _ids ()
  {
    return (String[])__ids.clone ();
  }

  private void readObject (java.io.ObjectInputStream s) throws java.io.IOException
  {
     String str = s.readUTF ();
     String[] args = null;
     java.util.Properties props = null;
     org.omg.CORBA.ORB orb = org.omg.CORBA.ORB.init (args, props);
   try {
     org.omg.CORBA.Object obj = orb.string_to_object (str);
     org.omg.CORBA.portable.Delegate delegate = ((org.omg.CORBA.portable.ObjectImpl) obj)._get_delegate ();
     _set_delegate (delegate);
   } finally {
     orb.destroy() ;
   }
  }

  private void writeObject (java.io.ObjectOutputStream s) throws java.io.IOException
  {
     String[] args = null;
     java.util.Properties props = null;
     org.omg.CORBA.ORB orb = org.omg.CORBA.ORB.init (args, props);
   try {
     String str = orb.object_to_string (this);
     s.writeUTF (str);
   } finally {
     orb.destroy() ;
   }
  }
} // class _GestionPacientesStub
